views:
  - title: Home
    badges:
      - type: entity
        show_name: true
        show_state: true
        show_icon: true
        color: orange
        entity: sensor.my_total_lights_on
        state_content: London
        icon: mdi:lightbulb
        name: Lights
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.my_door_count
        icon: mdi:door-open
        visibility:
          - condition: numeric_state
            entity: sensor.my_door_count
            above: 0
        color: ''
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.my_window_count
        icon: mdi:window-closed-variant
        visibility:
          - condition: numeric_state
            entity: sensor.my_window_count
            above: 0
        color: ''
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.my_motion_count
        icon: mdi:motion-sensor
        visibility:
          - condition: numeric_state
            entity: sensor.my_motion_count
            above: 0
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.my_camera_count
        icon: mdi:cctv
        color: ''
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: alarm_control_panel.home_alarm
        color: ''
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: person.adenike
        show_entity_picture: true
        color: white
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: person.ardave_home
        show_entity_picture: true
        color: white
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: person.aramide
        show_entity_picture: true
        color: white
        visibility:
          - condition: user
            users:
              - 59abab6536e7458da29678ff0a018321
              - 18bda55847134255aaede63eddd64bff
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: person.david
        show_entity_picture: true
        color: white
        visibility:
          - condition: user
            users:
              - 59abab6536e7458da29678ff0a018321
              - 18bda55847134255aaede63eddd64bff
    sections:
      - type: grid
        cards:
          - type: heading
            heading: Living Room
            heading_style: title
          - type: vertical-stack
            cards: []
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.living_room_light
                name: Main Light
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="13" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 50 50"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path fill="#9da0a2"
                    d="M27.4

                    47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0

                    .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8
                    0-8.4.4-10.9

                    5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0
                    .1 0 .7

                    1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18
                    3.2-18.8.1-.4.1-.5.1-.7"/>

                    <path class="${state}"
                    fill="var(--button-card-light-color-no-temperature)"

                    d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2
                    10.9.4.4-.4.7-.8.9-1.1C39 8.5

                    38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1
                    5 0 .5-.1 2.5

                    2.1 8.2 0 .3.3.8.7 1.1z"/></svg>`; ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: light.dining_light
                name: Dining Light
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="13" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 50 50"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path fill="#9da0a2"
                    d="M27.4

                    47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0

                    .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8
                    0-8.4.4-10.9

                    5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0
                    .1 0 .7

                    1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18
                    3.2-18.8.1-.4.1-.5.1-.7"/>

                    <path class="${state}"
                    fill="var(--button-card-light-color-no-temperature)"

                    d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2
                    10.9.4.4-.4.7-.8.9-1.1C39 8.5

                    38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1
                    5 0 .5-.1 2.5

                    2.1 8.2 0 .3.3.8.7 1.1z"/></svg>`; ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: light.living_room_lamp
                name: Main Lamp
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 32px
                      - position: absolute
                      - fill: grey
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg viewBox="0 0 50 50"><style>@keyframes
                    animate{0%{transform: scale(0.85);}20%{transform:
                    scale(1.1);}40%{transform: scale(0.95);}60%{transform:
                    scale(1.03);}80%{transform: scale(0.97);}100%{transform:
                    scale(1);}}.animate{animation: animate 0.8s;
                    transform-origin: center;}</style> <path fill="#9da0a2"
                    d="M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6
                    1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z"/> <path
                    class="${state}"
                    fill="var(--button-card-light-color-no-temperature)"
                    d="M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4
                    16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0
                    15.1-.3 15.9-.3
                    1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5"/></svg>`;
                    ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.tripod_light
                name: Tripod Light
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 45px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="13" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 50 50"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path fill="#9da0a2" d="M
                    23.519531

                    20.832031 L 14.417969 45.832031 L 16.632812 45.832031 L
                    23.957031 25.714844

                    L 23.957031 45.832031 L 26.042969 45.832031 L 26.042969
                    25.730469 L

                    33.359375 45.832031 L 35.574219 45.832031 L 26.480469
                    20.832031 Z M

                    23.519531 20.832031"/> <path class="${state}"

                    fill="var(--button-card-light-color-no-temperature)" d="M
                    20.832031 4.167969

                    L 15.625 18.75 L 34.375 18.75 L 29.167969
                    4.167969Z"/></svg>`; ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: light.hallway_light
                name: Hallway Light
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                      - fill: grey
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="13" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg viewBox="0 0 24 24"><style>@keyframes
                    animate{0%{transform: scale(0.85);}20%{transform:
                    scale(1.1);}40%{transform: scale(0.95);}60%{transform:
                    scale(1.03);}80%{transform: scale(0.97);}100%{transform:
                    scale(1);}}.animate{animation: animate 0.8s;
                    transform-origin: center;}</style>
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8,9H11V4H13V9H16L20,17H4L8,9M14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18H14Z" /></svg>
                                <path class="${state}" fill="var(--button-card-light-color-no-temperature)"  d="m 8,9 c 8,0 0.7559689,0 8,0 l 4,8 H 4 L 8,9"/></svg>`;
                    ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: light.hallway_lamp
                name: Hallway Lamp
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="13" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 50 50"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path fill="#9da0a2"
                    d="M26.5 21.8l3.8-6.1H19.7l3.8 6.1c-5 .7-6.3 5.8-5.7 10.2.7
                    5.1 3.2 10.1 5.7 14.4H19v2.5h11.8v-2.5h-4.5C29 42 31.4 37
                    32.1 32c.6-4.4-.6-9.4-5.6-10.2zm3.1 9.1c-.3 4.3-2.3 8.7-4.4
                    12.4l-.2.1v.1-.1c-1.8-3-3.3-6.4-4.1-9.7-.7-3.1-1-7.2 2.7-8.4
                    1.4-.5 3.1-.1 4.2.8 1.6 1 1.8 3 1.8 4.8z"/> <path
                    class="${state}"

                    fill="var(--button-card-light-color-no-temperature)"

                    d="M38.1 20L35.7
                    3.8c-.3-1.9-.4-1.7-.6-2-.9-.6-2.3-.7-2.3-.7H17.4s-1.4
                    0-2.3.7c-.2.3-.3.1-.6 2C14 5.7 11.9 20 11.9 20s5.8.3
                    13.4.3h0c7.3 0 12.8-.3 12.8-.3z"/></svg>`;

                    ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
      - type: grid
        cards:
          - type: heading
            heading: Aramide
            heading_style: title
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.aramide_light
                name: Aramide Light
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 200
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 50 50"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path fill="#9da0a2"
                    d="M27.4

                    47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0

                    .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8
                    0-8.4.4-10.9

                    5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0
                    .1 0 .7

                    1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18
                    3.2-18.8.1-.4.1-.5.1-.7"/>

                    <path class="${state}"
                    fill="var(--button-card-light-color-no-temperature)"

                    d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2
                    10.9.4.4-.4.7-.8.9-1.1C39 8.5

                    38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1
                    5 0 .5-.1 2.5

                    2.1 8.2 0 .3.3.8.7 1.1z"/></svg>`; ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: light.aramide_led
                name: Aramide Led
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_wled:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="13" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_wled: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 24 24"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path class="${state}"

                    fill="var(--button-card-light-color-no-temperature)"
                    d="M2.95 3L2 6.91L19.34

                    11.25L20.29 7.34L2.95 3M6.09 6.89L4.16 6.41L4.64 4.46L6.57
                    4.94L6.09

                    6.89M9.94 7.86L8 7.38L8.5 5.42L10.42 5.91L9.94 7.86M13.8
                    8.82L11.87

                    8.34L12.35 6.39L14.27 6.87L13.8 8.82M17.65 9.79L15.72
                    9.31L16.2 7.35L18.13

                    7.84L17.65 9.79M4.66 12.75L3.71 16.66L21.05 21L22 17.1L4.66
                    12.75M7.8

                    16.65L5.88 16.16L6.35 14.21L8.28 14.69L7.8 16.65M11.65
                    17.61L9.73 17.13L10.2

                    15.18L12.13 15.66L11.65 17.61M15.5 18.58L13.58 18.09L14.06
                    16.14L16

                    16.62L15.5 18.58M19.36 19.54L17.43 19.06L17.91 17.11L19.84
                    17.59L19.36

                    19.54M6.25 12.11L11 10.2L17.75 11.89L13 13.8L6.25
                    12.11Z"/></svg>`; ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: switch.living_room_fan
                triggers_update:
                  - sensor.time
                name: Bed Warmer
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                state:
                  - value: 'on'
                    icon: mdi:radiator
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: mdi:radiator
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                styles:
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 35px
                    - position: absolute
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                    - font-size: 14px
                    - line-height: 14px
                    - color: rgba(0, 0, 0, 0.4))
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
      - type: grid
        cards:
          - type: heading
            heading: David
            heading_style: title
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.david_light
                name: David Light
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 200
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 50 50"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path fill="#9da0a2"
                    d="M27.4

                    47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0

                    .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8
                    0-8.4.4-10.9

                    5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0
                    .1 0 .7

                    1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18
                    3.2-18.8.1-.4.1-.5.1-.7"/>

                    <path class="${state}"
                    fill="var(--button-card-light-color-no-temperature)"

                    d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2
                    10.9.4.4-.4.7-.8.9-1.1C39 8.5

                    38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1
                    5 0 .5-.1 2.5

                    2.1 8.2 0 .3.3.8.7 1.1z"/></svg>`; ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: light.david_led_light
                name: David Led Light
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_wled:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_wled: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 24 24"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path class="${state}"

                    fill="var(--button-card-light-color-no-temperature)"
                    d="M2.95 3L2 6.91L19.34

                    11.25L20.29 7.34L2.95 3M6.09 6.89L4.16 6.41L4.64 4.46L6.57
                    4.94L6.09

                    6.89M9.94 7.86L8 7.38L8.5 5.42L10.42 5.91L9.94 7.86M13.8
                    8.82L11.87

                    8.34L12.35 6.39L14.27 6.87L13.8 8.82M17.65 9.79L15.72
                    9.31L16.2 7.35L18.13

                    7.84L17.65 9.79M4.66 12.75L3.71 16.66L21.05 21L22 17.1L4.66
                    12.75M7.8

                    16.65L5.88 16.16L6.35 14.21L8.28 14.69L7.8 16.65M11.65
                    17.61L9.73 17.13L10.2

                    15.18L12.13 15.66L11.65 17.61M15.5 18.58L13.58 18.09L14.06
                    16.14L16

                    16.62L15.5 18.58M19.36 19.54L17.43 19.06L17.91 17.11L19.84
                    17.59L19.36

                    19.54M6.25 12.11L11 10.2L17.75 11.89L13 13.8L6.25
                    12.11Z"/></svg>`; ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: light.david_lamp
                name: David Lamp
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 32px
                      - position: absolute
                      - fill: grey
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg viewBox="0 0 50 50"><style>@keyframes
                    animate{0%{transform: scale(0.85);}20%{transform:
                    scale(1.1);}40%{transform: scale(0.95);}60%{transform:
                    scale(1.03);}80%{transform: scale(0.97);}100%{transform:
                    scale(1);}}.animate{animation: animate 0.8s;
                    transform-origin: center;}</style> <path fill="#9da0a2"
                    d="M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6
                    1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z"/> <path
                    class="${state}"
                    fill="var(--button-card-light-color-no-temperature)"
                    d="M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4
                    16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0
                    15.1-.3 15.9-.3
                    1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5"/></svg>`;
                    ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: switch.david_bed_warmer
                triggers_update:
                  - sensor.time
                name: Bed Warmer
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                state:
                  - value: 'on'
                    icon: mdi:radiator
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: mdi:radiator
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                styles:
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 35px
                    - position: absolute
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                    - font-size: 14px
                    - line-height: 14px
                    - color: rgba(0, 0, 0, 0.4))
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: sensor.hp_envy_photo_7800_series
                triggers_update:
                  - sensor.time
                name: HP Printer
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                state:
                  - value: 'on'
                    icon: mdi:printer
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: mdi:printer
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                  - value: idle
                    icon: mdi:printer
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                styles:
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 35px
                    - position: absolute
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                    - font-size: 14px
                    - line-height: 14px
                    - color: rgba(0, 0, 0, 0.4))
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: binary_sensor.david_motion
                triggers_update:
                  - sensor.time
                name: David Motion
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                state:
                  - value: 'on'
                    icon: mdi:run
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: mdi:walk
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                styles:
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 40px
                    - position: absolute
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                    - font-size: 14px
                    - line-height: 14px
                    - color: rgba(0, 0, 0, 0.4))
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
      - type: grid
        cards:
          - type: heading
            heading: 'Master Bedroom '
            heading_style: title
            icon: ''
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.bedroom_light
                name: Main Light
                show_state: true
                show_icon: false
                hold_action:
                  action: more-info
                variables:
                  circle_input: >
                    [[[ return Math.round(entity.attributes.brightness / 2.54);
                    ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  custom_fields:
                    icon_hue:
                      - top: 12%
                      - left: 5.5%
                      - width: 35px
                      - position: absolute
                    circle:
                      - top: 8.5%
                      - left: 54.2%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                custom_fields:
                  circle: |
                    [[[
                      if (entity.state === 'on') {
                        const input = variables.circle_input;
                        const radius = 20.5;
                        const circumference = radius * 2 * Math.PI;
                        return `
                          <svg viewBox="0 0 50 50">
                            <style>
                              circle {
                                transform: rotate(-90deg);
                                transform-origin: 50% 50%;
                                stroke-dasharray: ${circumference};
                                stroke-dashoffset: ${circumference - input / 100 * circumference};
                              }
                              tspan {
                                font-size: 10px;
                              }
                            </style>
                            <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                            <text x="50%" y="54%" fill="#8d8e90" font-size="13" text-anchor="middle" alignment-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
                          </svg>
                        `;
                      }
                    ]]]
                  icon_hue: >
                    [[[ const state = entity.state === 'on' ? 'animate' : null;
                    return `<svg

                    viewBox="0 0 50 50"><style>@keyframes animate{0%{transform:

                    scale(0.85);}20%{transform: scale(1.1);}40%{transform:

                    scale(0.95);}60%{transform: scale(1.03);}80%{transform:

                    scale(0.97);}100%{transform: scale(1);}}.animate{animation:
                    animate 0.8s;

                    transform-origin: center;}</style> <path fill="#9da0a2"
                    d="M27.4

                    47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0

                    .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8
                    0-.8.8.6.9.8.9h11.5c.2 0

                    .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8
                    0-8.4.4-10.9

                    5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0
                    .1 0 .7

                    1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18
                    3.2-18.8.1-.4.1-.5.1-.7"/>

                    <path class="${state}"
                    fill="var(--button-card-light-color-no-temperature)"

                    d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2
                    10.9.4.4-.4.7-.8.9-1.1C39 8.5

                    38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1
                    5 0 .5-.1 2.5

                    2.1 8.2 0 .3.3.8.7 1.1z"/></svg>`; ]]]
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: switch.bedroom_bed_warmer
                triggers_update:
                  - sensor.time
                name: Bed Warmer
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                state:
                  - value: 'on'
                    icon: mdi:radiator
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: mdi:radiator
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                  - value: unavailable
                    icon: mdi:radiator
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                styles:
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 35px
                    - position: absolute
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                    - font-size: 14px
                    - line-height: 14px
                    - color: rgba(0, 0, 0, 0.4))
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: switch.bedroom_fan
                triggers_update:
                  - sensor.time
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                icon: mdi:fan
                state:
                  - value: 'on'
                    styles:
                      icon:
                        - animation: rotating .6s linear infinite
                        - color: '#87ceeb'
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                styles:
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                    - background-color: |
                        [[[
                          return entity.state == "on"
                           ? "rgba(238,238,224)"
                            : "rgba(125, 125, 125, 0.2)"
                           ]]]
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 37px
                    - position: absolute
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                    - font-size: 14px
                    - line-height: 14px
                    - color: rgba(0, 0, 0, 0.4))
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
      - type: grid
        cards:
          - type: heading
            heading: New section
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: binary_sensor.balcony_door
                triggers_update:
                  - sensor.time
                name: null
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                styles:
                  card:
                    - background-color: rgba(238,238,224)
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 35px
                    - position: absolute
                state:
                  - value: 'on'
                    icon: mdi:door-open
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: mdi:door-closed
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: binary_sensor.front_door
                triggers_update:
                  - sensor.time
                name: null
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                styles:
                  card:
                    - background-color: rgba(238,238,224)
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - color: rgba(20, 20, 20, 1)
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 35px
                    - position: absolute
                state:
                  - value: 'on'
                    icon: mdi:door-open
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: mdi:door-closed
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: binary_sensor.kitchen_window
                triggers_update:
                  - sensor.time
                name: Kitchen Window
                show_state: true
                show_label: true
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                state:
                  - value: 'on'
                    icon: phu:double-window-open
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: phu:double-window-closed
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                styles:
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 35px
                    - position: absolute
                  name:
                    - top: 58.7%
                    - left: 8%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                    - font-size: 14px
                    - line-height: 14px
                    - color: rgba(0, 0, 0, 0.4))
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
      - type: grid
        cards:
          - type: heading
            heading: New section
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: switch.tv_cabinet_light
                triggers_update:
                  - sensor.time
                name: TV Cabinet
                show_state: true
                show_label: true
                hold_action:
                  action: more-info
                label: |
                  [[[ function time(c) {
                        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                        }
                        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                        const stroke_color = entity.state === 'open' ? '#b2b2b2' : '#b2b2b2'; 
                        const fill_color = entity.state === 'closed' ? 'none' : '#FFFFFF08';
                        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                        <text x="50%" y="54%" fill="#8d8e90" font-size="12" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
                state:
                  - value: 'on'
                    icon: mdi:led-strip-variant
                    styles:
                      card:
                        - background-color: rgba(238,238,224)
                      icon:
                        - color: '#87ceeb'
                  - value: 'off'
                    icon: mdi:led-strip-variant
                    styles:
                      card:
                        - background-color: rgba(125, 125, 125, 0.2)
                      icon:
                        - color: rgb(177,177,177)
                        - opacity: 0.9
                styles:
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                  icon:
                    - top: '-23%'
                    - left: 5.5%
                    - width: 35px
                    - position: absolute
                  name:
                    - top: 58.7%
                    - left: 6%
                    - position: absolute
                    - white-space: normal
                    - overflow: visible
                    - text-align: start
                    - line-height: 1
                    - font-size: 14px
                    - line-height: 14px
                    - color: rgba(0, 0, 0, 0.4))
                  state:
                    - top: 70%
                    - left: 8%
                    - line-height: 2
                    - position: absolute
                    - font-weight: 300
                  label:
                    - top: 8.5%
                    - left: 54.2%
                    - width: 37%
                    - position: absolute
                    - letter-spacing: 0.03vw
                card_mod:
                  style: |
                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: sensor.outside_temperature
                name: Outdoor Temp
                show_name: true
                show_state: false
                custom_fields:
                  circle: >
                    [[[ { const temperature = Math.round(entity.state); return
                    `<svg viewBox="0

                    0 50 50"><circle cx="25" cy="25" r="20.5" stroke="#b2b2b2"

                    stroke-width="1.5" fill="#FFFFFF08" style=" transform:
                    rotate(-90deg);

                    transform-origin: 50% 50%;" /> <text x="50%" y="54%"
                    fill="#8d8e90"

                    font-size="12" text-anchor="middle"
                    alignment-baseline="middle"

                    dominant-baseline="middle">${temperature}°C</text></svg>`; }
                    ]]]
                  graph:
                    card:
                      type: custom:mini-graph-card
                      color_thresholds:
                        - value: 21.5
                          color: '#307FFD'
                        - value: 22.5
                          color: '#018001'
                        - value: 23.5
                          color: '#FF9801'
                      entities:
                        - entity: sensor.outside_temperature
                      line_width: 7
                      animate: true
                      hours_to_show: 24
                      points_per_hour: 1
                      height: 120
                      align_icon: left
                      align_header: left
                      show:
                        name: false
                        icon: false
                        state: false
                        legend: false
                        labels: false
                styles:
                  name:
                    - top: 60.7%
                    - left: '-3%'
                    - width: 100%
                    - position: absolute
                  label:
                    - top: 85%
                    - left: '-15%'
                    - width: 100%
                    - position: absolute
                    - font-family: Sf Display
                    - font-size: 0.90vw
                  custom_fields:
                    graph:
                      - bottom: 10%
                      - left: 12%
                      - width: 120px
                      - position: absolute
                      - margin: '-11.5% -10.5% -10.5% -11.5%'
                      - overflow: hidden
                    circle:
                      - top: 8%
                      - left: 55%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                    - background-color: rgba(238,238,224)
                  icon:
                    - width: 36px
                    - fill: '#9da0a2'
                    - position: absolute
                    - top: '-25%'
                    - left: 3%
                    - color: '#87ceeb'
                card_mod:
                  style: |
                    :host {
                      --ha-card-background: "rgba(238,238,224)";
                        
                    }

                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
              - type: custom:button-card
                entity: sensor.outside_humidity
                name: Outdoor Hum
                icon: mdi:water-opacity
                show_name: true
                show_state: false
                custom_fields:
                  circle: >
                    [[[ { const temperature = Math.round(entity.state); return
                    `<svg viewBox="0

                    0 50 50"><circle cx="25" cy="25" r="20.5" stroke="#b2b2b2"

                    stroke-width="1.5" fill="#FFFFFF08" style=" transform:
                    rotate(-90deg);

                    transform-origin: 50% 50%;" /> <text x="50%" y="54%"
                    fill="#8d8e90"

                    font-size="12" text-anchor="middle"
                    alignment-baseline="middle"

                    dominant-baseline="middle">${temperature}%</text></svg>`; }
                    ]]]
                  graph:
                    card:
                      type: custom:mini-graph-card
                      color_thresholds:
                        - value: 21.5
                          color: '#f39c12'
                        - value: 22.5
                          color: '#d35400'
                        - value: 23.5
                          color: '#c0392b'
                      entities:
                        - entity: sensor.outside_humidity
                      line_width: 7
                      animate: true
                      hours_to_show: 24
                      points_per_hour: 1
                      height: 90
                      align_icon: left
                      align_header: left
                      show:
                        name: false
                        icon: false
                        state: false
                        legend: false
                        labels: false
                styles:
                  name:
                    - top: 60.7%
                    - left: '-3%'
                    - width: 100%
                    - position: absolute
                  label:
                    - top: 85%
                    - left: '-15%'
                    - width: 100%
                    - position: absolute
                    - font-family: Sf Display
                    - font-size: 0.90vw
                  custom_fields:
                    graph:
                      - bottom: 10%
                      - left: 12%
                      - width: 120px
                      - position: absolute
                      - margin: '-11.5% -10.5% -10.5% -11.5%'
                      - overflow: hidden
                    circle:
                      - top: 8%
                      - left: 55%
                      - width: 37%
                      - position: absolute
                      - letter-spacing: 0.03vw
                  card:
                    - width: 120px
                    - height: 120px
                    - border-radius: 12px
                    - font-size: 14.5px
                    - box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 0px
                    - color: rgba(20, 20, 20, 1)
                    - background-color: rgba(238,238,224)
                  icon:
                    - width: 36px
                    - fill: '#9da0a2'
                    - position: absolute
                    - top: '-25%'
                    - left: 3%
                    - color: '#87ceeb'
                card_mod:
                  style: |
                    :host {
                      --ha-card-background: "rgba(238,238,224)";
                        
                    }

                    @media (max-width: 800px) {
                      ha-card {
                        width: 110px !important;
                        height: 110px !important;
                      }
                    }
    background:
      image: /api/image/serve/5ba4054ce58f7cd4a32b966c4deecd34/original
    cards: []
    type: sections
    max_columns: 4
    theme: ardavei
